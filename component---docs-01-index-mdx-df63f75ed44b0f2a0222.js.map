{"version":3,"sources":["webpack:///../docs/01-index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,Q,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,qBAAG,0BAAYC,WAAW,KAAvB,WAAH,2GACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,qBAAG,0BAAYA,WAAW,KAAvB,WAAH,mcACA,iUACA,+TAA8S,kBAAIA,WAAW,KAAf,QAA9S,kGACA,iBAAQ,CACN,GAAM,YADR,YAGA,+WACA,oOACA,iZACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yBADQ,SAApB,IAEuB,mBAAGA,WAAW,MAAS,CAC1C,KAAQ,0BADW,UAGvB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0BADQ,aAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uCADQ,UAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qCADQ,qBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yBADQ,QAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,kCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kEADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,mBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,UAItB,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oCADQ,a,0LAQ1BJ,EAAWK,gBAAiB","file":"component---docs-01-index-mdx-df63f75ed44b0f2a0222.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesdigioia/Code/brookjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"brookjs\"\n    }}>{`brookjs`}</h1>\n    <p><inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{` combines React/Redux with reactive programming tools to enable well-structured, testable applications.`}</p>\n    <h2 {...{\n      \"id\": \"well-structured\"\n    }}>{`Well-Structured`}</h2>\n    <p><inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{` enables you to output events in your components through streams. Components get callbacks that map events to values in the stream, and the streams themselves can map those values to the relevant Redux events. Those are then piped into Redux, which manages the state of the entire application. The loop is closed when the state is mapped into the view. Thus, components become solely an expression of I/O, maintaining no internal state by default.`}</p>\n    <p>{`Applications can be embedded within one another, enabling the application to be fractalized. Events are emitted out of each nested fractal into the parent layer, which can manage its own state with a reducer. In this way, an application can be internally complete while nested inside larger apps.`}</p>\n    <p>{`Side effects can read from the stream of actions as well as a stream state to make API calls, read or write to a web socket, or manage a worker. The reducer can send commands to these side effects, allowing the reducer to manage both the current state of the application as well as what happens `}<em parentName=\"p\">{`next`}</em>{`. With side effects pushed into a corner, all application logic is defined in the Redux store.`}</p>\n    <h2 {...{\n      \"id\": \"testable\"\n    }}>{`Testable`}</h2>\n    <p>{`With your components acting as I/O, testing them requires passing in state and ensuring the correct DOM is emitted, and triggering DOM events against them and ensuring the correct events are emitted. All side effects in your application can be tested like this, ensuring the communication channels out of the application function as expected.`}</p>\n    <p>{`Your application logic is expressed in your reducers, which are all pure functions. This makes them easy to test, checking that a state & action combination produces the expected new state & next action.`}</p>\n    <p>{`Integration testing can be handled by replacing I/O with a matching mock I/O, controlling what events are emitted in response to what commands. You can drive your application at every level, from small unit tests handling detailed logic, integration tests ensuring a particular piece of the application runs as expected, all the way up to full end-to-end tests in the browser.`}</p>\n    <h2 {...{\n      \"id\": \"influences\"\n    }}>{`Influences`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://reactjs.org/\"\n        }}>{`React`}</a>{`/`}<a parentName=\"li\" {...{\n          \"href\": \"https://redux.js.org/\"\n        }}>{`Redux`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cycle.js.org/\"\n        }}>{`Cycle.js`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/calmm-js/karet/\"\n        }}>{`Karet`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://redux-observable.js.org/\"\n        }}>{`redux-observable`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://elm-lang.org/\"\n        }}>{`elm`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://alistair.cockburn.us/Hexagonal+architecture\"\n        }}>{`Ports & Adapters Architecture`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://berb.github.io/diploma-thesis/original/054_actors.html\"\n        }}>{`Actor Model`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://martinfowler.com/eaaDev/EventSourcing.html\"\n        }}>{`Event sourcing`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://martinfowler.com/bliki/CQRS.html\"\n        }}>{`CQRS`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"community\"\n    }}>{`Community`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://gitter.im/brookjs/Lobby\"\n        }}>{`Gitter`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}