{"version":3,"sources":["webpack:///../docs/getting-started/01-quickstart.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,wNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,qDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,mBADZ,gCAIL,sEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+mBAmCL,yGAA0F,0BAAYA,WAAW,KAAvB,WAA1F,8GAA4P,0BAAYA,WAAW,KAAvB,gBAA5P,kGACA,sBACE,kBAAIA,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,QACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,wBACA,kBAAIA,WAAW,MAAf,cAEF,kEAAiD,mBAAGA,WAAW,KAAQ,CACnE,KAAQ,QADqC,oBAAjD,qCAEmE,0BAAYA,WAAW,KAAvB,WAFnE,M,+MAOJJ,EAAWK,gBAAiB","file":"component---docs-getting-started-01-quickstart-mdx-2a351c39ba3ffe185116.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesdigioia/Code/brookjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart\"\n    }}>{`Quickstart`}</h1>\n    <p>{`Bootstrap a new application:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npx brookjs-cli new myapp\n`}</code></pre>\n    <p>{`You'll see a new folder structured like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tree\"\n      }}>{`myapp\n|____.storybook\n| |____.babelrc\n| |____main.js\n|____.beaverrc.js\n|____public\n| |____index.html\n| |____manifest.json\n|____package.json\n|____src\n| |____index.js\n| |____state\n| | |____index.js\n| | |______tests__\n| | | |____state.spec.js\n| |____components\n| | |______stories__\n| | | |____App.stories.js\n| | |____index.js\n| | |______tests__\n| | | |____App.spec.js\n| | |____App.js\n| |____deltas\n| | |____index.js\n| |______tests__\n| | |____storyshots.spec.js\n| | |______snapshots__\n| | | |____storyshots.spec.js.snap\n| |____actions\n| | |____index.js\n| | |____app.js\n| |____setupTests.js\n`}</code></pre>\n    <p>{`The CLI is `}{`_`}{`very opinionated, but it is not a requirement for working with `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{`. You can configure various aspects of the CLI, including which folder your source code is in, through the `}<inlineCode parentName=\"p\">{`.beaverrc.js`}</inlineCode>{` file, but this is the default folder your application lives in. By default, the CLI provides:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Prettier`}</li>\n      <li parentName=\"ul\">{`ESLint`}</li>\n      <li parentName=\"ul\">{`Jest`}</li>\n      <li parentName=\"ul\">{`Storybook`}</li>\n      <li parentName=\"ul\">{`Storyshots`}</li>\n      <li parentName=\"ul\">{`Webpack + dev server`}</li>\n      <li parentName=\"ul\">{`Puppeteer`}</li>\n    </ul>\n    <p>{`Alternatively, you could use an tool like `}<a parentName=\"p\" {...{\n        \"href\": \"cra\"\n      }}>{`Create React App`}</a>{`, which works perfectly well with `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}