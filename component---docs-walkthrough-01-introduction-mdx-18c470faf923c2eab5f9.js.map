{"version":3,"sources":["webpack:///../docs/walkthrough/01-introduction.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,sFAAqE,0BAAYC,WAAW,KAAvB,WAArE,oTACA,wLAAuK,0BAAYA,WAAW,KAAvB,WAAvK,wHAAmV,0BAAYA,WAAW,KAAvB,WAAnV,wIACA,gGAA+E,0BAAYA,WAAW,KAAvB,WAA/E,kBACA,4C,6MAKJJ,EAAWK,gBAAiB","file":"component---docs-walkthrough-01-introduction-mdx-18c470faf923c2eab5f9.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jamesdigioia/Code/brookjs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`This tutorial will go through your basic todo app, built with `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{` in top of the starter application generated by the brookjs-cli. Through this, we'll learn what observables are & how they work, how to write components that emit through observables, how to compose those components to build bigger components and applications, and how to handle side effects with deltas.`}</p>\n    <p>{`Once we've got the basics down, we'll go through some advanced concepts, including managing reactive refs with streams, integrating third party components with `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{`, fractalizing the application to embed into other applications, and building components that can be used outside of `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{` applications. Lastly, we'll look at customizing the CLI so we get full control over the build system provided for your application.`}</p>\n    <p>{`After completing these tutorials, you should be ready to build your own `}<inlineCode parentName=\"p\">{`brookjs`}</inlineCode>{` applications.`}</p>\n    <p>{`Excited? Let's go!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}